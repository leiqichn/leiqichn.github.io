{
  "main": {
    "id": "3fc0316f593dc8ca",
    "type": "split",
    "children": [
      {
        "id": "55b603b34ef4e9a2",
        "type": "tabs",
        "children": [
          {
            "id": "591c634332e94d6c",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "source/_posts/Golang/golang 设计题.md",
                "mode": "source",
                "source": false,
                "backlinks": false
              },
              "pinned": true,
              "icon": "lucide-file",
              "title": "golang 设计题"
            }
          },
          {
            "id": "3510a28e73acdece",
            "type": "leaf",
            "pinned": true,
            "state": {
              "type": "markdown",
              "state": {
                "file": "source/_posts/前端/本地生成hexo 网页.md",
                "mode": "source",
                "source": false,
                "backlinks": false
              },
              "pinned": true,
              "icon": "lucide-file",
              "title": "本地生成hexo 网页"
            }
          },
          {
            "id": "afbaf72d8b3a11ec",
            "type": "leaf",
            "state": {
              "type": "markdown",
              "state": {
                "file": "source/_posts/工具/pycharm配置VPN代理.md",
                "mode": "source",
                "source": false,
                "backlinks": false
              },
              "icon": "lucide-file",
              "title": "pycharm配置VPN代理"
            }
          },
          {
            "id": "2e061fdfb8858600",
            "type": "leaf",
            "state": {
              "type": "terminal:documentation",
              "state": {
                "terminal:documentation": {
                  "data": "# Terminal for Obsidian [![release](https://img.shields.io/github/v/release/polyipseity/obsidian-terminal)][latest release] [![Obsidian downloads](https://img.shields.io/badge/dynamic/json?logo=Obsidian&color=%238b6cef&label=downloads&query=$[\"terminal\"].downloads&url=https://raw.githubusercontent.com/obsidianmd/obsidian-releases/master/community-plugin-stats.json)][community plugin] [![Python](https://img.shields.io/badge/Python-≥3.10-gold?labelColor=blue&logo=Python&logoColor=white)][Python]\n\n[Buy Me a Coffee]: https://buymeacoffee.com/polyipseity\n[Buy Me a Coffee/embed]: https://img.buymeacoffee.com/button-api/?text=Buy%20me%20a%20coffee&emoji=&slug=polyipseity&button_colour=40DCA5&font_colour=ffffff&font_family=Lato&outline_colour=000000&coffee_colour=FFDD00\n[Obsidian]: https://obsidian.md/\n[Python]: https://python.org/downloads/\n[changelog]: https://github.com/polyipseity/obsidian-terminal/blob/main/CHANGELOG.md\n[community plugin]: https://obsidian.md/plugins?id=terminal\n[latest release]: https://github.com/polyipseity/obsidian-terminal/releases/latest\n[other things]: https://github.com/polyipseity/obsidian-monorepo\n[plugin library]: https://github.com/polyipseity/obsidian-plugin-library\n[repository]: https://github.com/polyipseity/obsidian-terminal\n[trailer]: https://raw.githubusercontent.com/polyipseity/obsidian-terminal/main/assets/trailer.png\n\nIntegrate consoles, shells, and terminals inside [Obsidian].\n\n[![Buy Me a Coffee/embed]][Buy Me a Coffee]\n\n__[Repository] · [Changelog] · [Community plugin] · [Other things] · [Features](#features) · [Installation](#installation) · [Usage](#usage) · [Contributing](#contributing) · [Security](#security)__\n\n![Trailer]\n\nFor first time users, read the [installation](#installation) section first!\n\nThis file is automatically opened on first install. You can reopen it in settings or command palette.\n\n## Features\n\n- Start external terminals from Obsidian.\n- Integrate terminals into Obsidian.\n- Has an emulated developer console usable on all platforms.\n- Supports multiple terminal profiles.\n- Has built-in keyboard shortcuts.\n- Automatically save and restore integrated terminal history.\n- Find in terminal.\n- Save terminal history as file.\n- Customize terminal appearance.\n\n## Installation\n\n1. Install plugin.\n    - Community plugins\n        1. Install the [plugin][community plugin] from community plugins directly.\n    - Manual\n        1. Create directory `terminal` under `.obsidian/plugins` of your vault.\n        2. Place `manifest.json`, `main.js`, and `styles.css` from the [latest release] into the directory.\n    - Building (latest)\n        1. Clone this repository, including its submodules.\n        2. Install [npm](https://docs.npmjs.com/downloading-and-installing-node-js-and-npm).\n        3. Run `npm install` in the root directory.\n        4. Run `npm run obsidian:install <vault directory>` in the root directory.\n    - [Obsidian42 - BRAT](https://obsidian.md/plugins?id=obsidian42-brat) (latest)\n        - See [their readme](https://github.com/TfTHacker/obsidian42-brat#readme).\n2. (optional for Windows, recommended) Install Python and dependencies.\n    1. Install [Python] 3.10/+.\n    2. (Windows only) Run `pip3 install psutil==5.9.5 pywinctl==0.0.50 typing_extensions==4.7.1`. <!-- Update `README.md`, `magic.ts`, and `requirements.txt` together. -->\n    3. Configure Python executable in plugin settings. Press the \"Check\" button to validate the Python configuration.\n3. Enable plugin.\n4. (optional) Configure plugin settings.\n\n## Usage\n\n- To start a new external or integrated terminal\n  - Ribbon\n        1. Click on the `Open terminal` ribbon.\n        2. Choose the desired profile.\n  - Context menu\n        1. Right-click on files, folders, or tab headers.\n        2. Choose the desired action (and profile).\n  - Command palette\n        1. Press `Ctrl`+`P` or click on the `Open command palette` ribbon next to the left window border.\n        2. Choose the desired action (and profile).\n- To save and restore integrated terminal history\n    1. Keep the terminal open when exiting Obsidian.\n    2. Terminal history will be restored next time Obsidian is opened.\n- Additional actions\n  - Includes\n    - Find in terminal: (1), (4)\n    - Clear terminal: (1), (4)\n    - Restart terminal: (1)\n    - Edit terminal: (1)\n    - Save terminal history as file: (1)\n    - Export, import, or edit settings: (2), (3)\n    - Open documentation: (2), (3)\n  - Available by\n    - (1) Right-click on tab header/`More options`\n    - (2) Open settings\n    - (3) Open command palette\n    - (4) Use keyboard shortcuts\n\n### Keyboard shortcuts\n\nThe keyboard shortcuts are not customizable for now.\n\n<!-- markdownlint-disable-next-line MD036 -->\n__Terminal tab is focused__\n\n- Focus: `Ctrl`+`Shift`+`` ` ``\n- Inherits global keyboard shortcuts\n\n<!-- markdownlint-disable-next-line MD036 -->\n__Terminal is focused__\n\n- Clear: `Ctrl`+`Shift`+`K`, `Command`+`K` (Apple)\n- Close: `Ctrl`+`Shift`+`W`, `Command`+`W` (Apple)\n- Find: `Ctrl`+`Shift`+`F`, `Command`+`F` (Apple)\n- Toggle focus: `Ctrl`+`Shift`+`` ` ``\n\n### Theming\n\nTheming is possible. However, there is no user-friendly interface for now.\n\n1. Open the profile editing modal.\n2. Click on the `Edit` button labeled `Data`. It should open up a new modal in which there is a large textbox.\n3. Notice `terminalOptions` in the text area labeled `Data`. Refer to the [`xterm.js` documentation](https://github.com/xtermjs/xterm.js/blob/master/typings/xterm.d.ts#L26) (`ITerminalOptions`) to set the options. Nested objects may need to be used.\n4. Save the profile. Changes should apply immediately.\n\n### Profiles\n\nThis plugin comes with several profile presets that you can reference.\n\nWhen setting up a terminal profile, you need to distinguish between shells and terminal emulators. (Search online if needed.) Generally, integrated profiles only work with shells while external ones only work with terminal emulators.\n\n#### Examples\n\n<!-- markdownlint-disable-next-line MD036 -->\n__Shells__\n\n- Bash: `bash`\n- Bourne shell: `sh`\n- Command Prompt: `cmd`\n- Dash: `dash`\n- Git Bash: `<Git installation>\\bin\\bash.exe` (e.g. `C:\\Program Files\\Git\\bin\\bash.exe`)\n- PowerShell Core: `pwsh`\n- Windows PowerShell: `powershell`\n- Windows Subsystem for Linux: `wsl` or `wsl -d <distribution name>`\n- Z shell: `zsh`\n\n<!-- markdownlint-disable-next-line MD036 -->\n__Terminal emulators__\n\n- Command Prompt: `cmd`\n- GNOME Terminal: `gnome-terminal`\n- Konsole: `konsole`\n- Terminal (macOS): `/System/Applications/Utilities/Terminal.app/Contents/macOS/Terminal \"$PWD\"`\n- Windows Terminal: `wt`\n- iTerm2: `/Applications/iTerm.app/Contents/MacOS/iTerm2 \"$PWD\"`\n- xterm: `xterm`\n\n### Miscellaneous\n\nThis plugin patches `require` so that `require(\"obsidian\")` and other Obsidian modules work in the developer console. It is toggleable as `Expose internal modules` in settings.\n\nIn the developer console, a context variable `$$` is passed into the code, which can be used to dynamically change terminal options.\n\nThe full API is available from [`sources/@types/obsidian-terminal.ts`](sources/%40types/obsidian-terminal.ts).\n\n### Troubleshooting\n\n- Is the plugin useful on mobile?\n  - Compared to on desktop, it is much less useful. The only use for it for now is opening a developer console on mobile.\n- Why do hotkeys not work?\n  - If the terminal is in focus, all Obsidian hotkeys are disabled so that you can type special characters into the terminal. You can unfocus the terminal by pressing `Ctrl`+`Shift`+`` ` ``, then you can use Obsidian hotkeys again.\n\n## Contributing\n\nContributions are welcome!\n\nThis project uses [`changesets`](https://github.com/changesets/changesets) to manage the changelog. When creating a pull request, please [add a changeset](https://github.com/changesets/changesets/blob/main/docs/intro-to-using-changesets.md#adding-changesets) describing the changes. Add multiple changesets if your pull request changes several things. End each changeset with `([PR number](PR link) by [author username](author link))`. For example, the newly created file under the directory `.changeset` should look like:\n\n```Markdown\n---\n\"example\": patch\n---\n\nThis is an example change. ([GH#1](https://github.com/ghost/example/pull/1) by [@ghost](https://github.com/ghost))\n```\n\n### Todos\n\nThe todos here, ordered alphabetically, are things planned for the plugin. There are no guarantees that they will be completed. However, we are likely to accept contributions for them.\n\n- Connect to remote shells.\n- Copy terminal tabs.\n- Create ad-hoc profile in `Open terminal: Select`.\n- Detect sandboxed environment and notify users.\n- Edit profile before opening terminal in `Open terminal: Select` when a modifier key is pressed.\n- External link confirmation.\n- Filter console log by severity in the developer console.\n- Fix broken section links in builtin documentations.\n- Indicate that the terminal resizer has crashed or is disabled.\n- Shared terminal tabs.\n- Vim mode switch.\n\n### Translating\n\nTranslation files are under [`assets/locales/`](assets/locales/). Each locale has its own directory named with its corresponding __[IETF language tag](https://wikipedia.org/wiki/IETF_language_tag)__. Some translation keys are missing here and instead located at [`obsidian-plugin-library`][plugin library].\n\nTo contribute translation for an existing locale, modify the files in the corresponding directory.\n\nFor a new locale, create a new directory named with its language tag and copy [`assets/locales/en/translation.json`](assets/locales/en/translation.json) into it. Then, add an entry to [`assets/locales/en/language.json`](assets/locales/en/language.json) in this format:\n\n```JSONc\n{\n    // ...\n    \"en\": \"English\",\n    \"(your-language-tag)\": \"(Native name of your language)\",\n    \"uwu\": \"Uwuish\",\n    // ...\n}\n```\n\nSort the list of languages by the alphabetical order of their language tags. Then modify the files in the new directory. There will be errors in [`assets/locales.ts`](assets/locales.ts), which you can ignore and we will fix them for you. You are welcome to fix them yourself if you know TypeScript.\n\nWhen translating, keep in mind the following things:\n\n- Do not translate anything between `{{` and `}}` (`{{example}}`). They are __interpolations__ and will be replaced by localized strings at runtime.\n- Do not translate anything between `$t(` and `)` (`$t(example)`). They refer to other localized strings. To find the localized string being referred to, follow the path of the key, which is separated by dots (`.`). For example, the key [`youtu.be./dQw4w9WgXcQ`](https://youtu.be./dQw4w9WgXcQ) refers to:\n\n```JSONc\n{\n    // ...\n    \"youtu\": {\n        // ...\n        \"be\": {\n            // ...\n            \"/dQw4w9WgXcQ\": \"I am 'youtu.be./dQw4w9WgXcQ'!\",\n            // ...\n        },\n        // ...\n    },\n    // ...\n}\n```\n\n- The keys under `generic` are vocabularies. They can be referred in translation strings by `$t(generic.key)`. Refer to them as much as possible to standardize translations for vocabularies that appear in different places.\n- It is okay to move interpolations and references to other localized strings around to make the translation natural. It is also okay to not use some references used in the original translation. However, it is NOT okay to not use all interpolations.\n\n## Security\n\nWe hope that there will never be any security vulnerabilities, but unfortunately it does happen. Please [report](#reporting-a-vulnerability) them!\n\n### Supported versions\n\n| Version | Supported |\n|-|-|\n| latest | ✅ |\n| outdated | ❌ |\n\n### Reporting a vulnerability\n\nPlease report a vulerability by opening an new issue. We will get back to you as soon as possible.\n",
                  "displayTextI18nKey": "translation:generic.documentations.readme",
                  "iconI18nKey": "asset:generic.documentations.readme-icon"
                }
              },
              "icon": "file-question",
              "title": "自述文件"
            }
          }
        ],
        "currentTab": 3
      }
    ],
    "direction": "vertical"
  },
  "left": {
    "id": "f801a880261929fb",
    "type": "split",
    "children": [
      {
        "id": "5777405e05b50cb5",
        "type": "tabs",
        "dimension": 64.56634544106745,
        "children": [
          {
            "id": "d3d227159ce7968a",
            "type": "leaf",
            "state": {
              "type": "git-view",
              "state": {},
              "icon": "git-pull-request",
              "title": "Source Control"
            }
          },
          {
            "id": "520d050d9f24a28a",
            "type": "leaf",
            "state": {
              "type": "file-explorer",
              "state": {
                "sortOrder": "alphabetical",
                "autoReveal": false
              },
              "icon": "lucide-folder-closed",
              "title": "文件列表"
            }
          },
          {
            "id": "fb10f7d95db1217b",
            "type": "leaf",
            "state": {
              "type": "starred",
              "state": {},
              "icon": "lucide-file",
              "title": "插件不再活动"
            }
          },
          {
            "id": "779c6f963b9d7e25",
            "type": "leaf",
            "state": {
              "type": "file-tree-view",
              "state": {},
              "icon": "sheets-in-box",
              "title": "File Tree"
            }
          },
          {
            "id": "dab6b88fdd11f4e2",
            "type": "leaf",
            "state": {
              "type": "bookmarks",
              "state": {},
              "icon": "lucide-bookmark",
              "title": "Bookmarks"
            }
          }
        ]
      },
      {
        "id": "d299abda62253875",
        "type": "tabs",
        "dimension": 35.433654558932545,
        "children": [
          {
            "id": "6a5736f8a6d1f448",
            "type": "leaf",
            "state": {
              "type": "search",
              "state": {
                "query": "git ",
                "matchingCase": false,
                "explainSearch": false,
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical"
              },
              "icon": "lucide-search",
              "title": "搜索"
            }
          },
          {
            "id": "6f2ace9753780822",
            "type": "leaf",
            "state": {
              "type": "calendar",
              "state": {},
              "icon": "calendar-with-checkmark",
              "title": "Calendar"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 363.49999618530273
  },
  "right": {
    "id": "468a8d172cc76aa0",
    "type": "split",
    "children": [
      {
        "id": "a1895afaf5b88aaf",
        "type": "tabs",
        "children": [
          {
            "id": "6dc9d8a617b1c729",
            "type": "leaf",
            "state": {
              "type": "backlink",
              "state": {
                "collapseAll": false,
                "extraContext": false,
                "sortOrder": "alphabetical",
                "showSearch": false,
                "searchQuery": "",
                "backlinkCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-coming-in",
              "title": "反向链接"
            }
          },
          {
            "id": "c80d38758d377b25",
            "type": "leaf",
            "state": {
              "type": "outgoing-link",
              "state": {
                "file": "source/_posts/carl/代码随想录 day11 第五章 栈与队列part02.md",
                "linksCollapsed": false,
                "unlinkedCollapsed": true
              },
              "icon": "links-going-out",
              "title": "Outgoing links from 代码随想录 day11 第五章 栈与队列part02"
            }
          },
          {
            "id": "7d7caeb23176cf75",
            "type": "leaf",
            "state": {
              "type": "tag",
              "state": {
                "sortOrder": "frequency",
                "useHierarchy": true
              },
              "icon": "lucide-tags",
              "title": "Tags"
            }
          },
          {
            "id": "60d5116fafbfa747",
            "type": "leaf",
            "state": {
              "type": "outline",
              "state": {
                "file": "source/_posts/工具/clash在终端设置代理.md",
                "followCursor": false,
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-list",
              "title": "clash在终端设置代理 的大纲"
            }
          },
          {
            "id": "c80751c690f98dfc",
            "type": "leaf",
            "state": {
              "type": "all-properties",
              "state": {
                "sortOrder": "frequency",
                "showSearch": false,
                "searchQuery": ""
              },
              "icon": "lucide-archive",
              "title": "All properties"
            }
          }
        ]
      }
    ],
    "direction": "horizontal",
    "width": 200
  },
  "left-ribbon": {
    "hiddenItems": {
      "switcher:打开快速切换": false,
      "graph:查看关系图谱": false,
      "canvas:新建白板": false,
      "daily-notes:打开/创建今天的日记": false,
      "templates:插入模板": false,
      "command-palette:打开命令面板": false,
      "obsidian-excalidraw-plugin:新建 Excalidraw 绘图": false,
      "mermaid-tools:Open Mermaid Toolbar": false,
      "obsidian-weread-plugin:Weread": false,
      "templater-obsidian:Templater": false,
      "file-tree-alternative:File Tree Alternative Plugin": false,
      "terminal:Open terminal": false
    }
  },
  "active": "d3d227159ce7968a",
  "lastOpenFiles": [
    "source/_posts/工具/pycharm配置VPN代理.md",
    "source/imgs/Pasted image 20250609002055.png",
    "source/imgs/Pasted image 20250609001953.png",
    "source/imgs/Pasted image 20250609001902.png",
    "source/imgs/Pasted image 20250609001826.png",
    "source/imgs/Pasted image 20250609001820.png",
    "source/_posts/git/设置github 同步到gitee.md",
    "source/_posts/leetcode/回溯总结.md",
    "source/imgs/Pasted image 20250605230928.png",
    "source/imgs/Pasted image 20250605230846.png",
    "source/imgs/Pasted image 20250605230825.png",
    "source/_posts/leetcode/闭包介绍.md",
    "source/_posts/leetcode/test.md",
    "source/_posts/leetcode/【go】初始化双向列表List.md",
    "source/_posts/Linux/docker命令.md",
    "source/_posts/比赛/比赛任务分配.md",
    "themes/temp/read/计算机/每天5分钟玩转Docker容器技术.md",
    "source/_posts/git/git 设置免密配置-全局免密-单仓库免密-SSH免密.md",
    "source/_posts/git/git stash 使用指南.md",
    "source/_posts/前端/本地生成hexo 网页.md",
    "source/_posts/Golang/golang 设计题.md",
    "source/_posts/关于我/关于我.md",
    "source/about/index.md",
    "source/_posts/比赛/comet 生成临时文件导致磁盘满.md",
    "source/_posts/比赛/大模型微调.md",
    "source/_posts/git/Windows Git自动转换为Linux换行符.md",
    "source/_posts/git/git更新仓库地址.md",
    "themes/temp/取消git 代理.md",
    "source/_posts/工具/clash在终端设置代理.md",
    "source/imgs/ima.copilot-win-x64-1.6.1(2463).exe",
    "source/imgs/未确认 695400.crdownload",
    "source/obsidian_tamplate/TemPlater.md",
    "source/imgs/xiaohongshu-qrcode.jpg",
    "source/imgs/bilibili-qrcode.jpg",
    "source/imgs/公众号_爱给网_aigei_com.png.crdownload",
    "source/imgs/xiaohongshu.zip",
    "public/assets/algolia/algoliasearchLite.min.js",
    "public/assets/algolia/algoliasearchLite.js",
    "public/assets/algolia/algoliasearch.min.js",
    "public/assets/img/微信图片_20230319125819.png.html",
    "public/assets/algolia/algoliasearch.js",
    "public/assets/img/Snipaste_2023-03-19_12-43-32.png.html",
    "scaffolds/post.md",
    "scaffolds/page.md",
    "scaffolds/draft.md",
    "未命名 3.canvas",
    "未命名 2.canvas",
    "未命名 1.canvas",
    "未命名.canvas"
  ]
}